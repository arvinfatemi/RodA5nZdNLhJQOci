# =============================================================================
# Docker Compose - Unified Configuration with Profiles
# =============================================================================
# This Docker Compose file supports both simple and advanced setups using profiles.
#
# Usage:
#   Simple Setup (default - educational/quick start):
#     docker-compose up -d
#     OR
#     docker-compose --profile simple up -d
#
#   Advanced Setup (production with credentials):
#     docker-compose --profile advanced up -d
#
# Features by Profile:
#   Simple:  Public Google Sheets, console logs, no credentials needed
#   Advanced: Private Google Sheets, Telegram/Email, full authentication
# =============================================================================

version: '3.8'

services:
  # =============================================================================
  # Simple Setup Service (Default Profile)
  # =============================================================================
  # Perfect for learning and testing - zero external API setup needed!
  # - No credential files needed
  # - Works with public Google Sheets
  # - Notifications to console logs
  # - Minimal configuration
  btc-trading-bot-simple:
    profiles: ["simple"]
    build: .
    container_name: btc-trading-bot-simple
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Application settings
      - DEBUG=${DEBUG:-false}
      - HOST=0.0.0.0
      - PORT=8000

      # Google Sheets configuration (public sheet only)
      - GOOGLE_SHEET_ID=${GOOGLE_SHEET_ID}
      - GOOGLE_WORKSHEET_NAME=${GOOGLE_WORKSHEET_NAME:-Sheet1}

      # No credentials needed for public sheets!
      # Notifications default to console logs (no setup required)

      # Optional: Coinbase configuration
      - COINBASE_CANDLES_GRANULARITY=${COINBASE_CANDLES_GRANULARITY:-30m}

      # File paths
      - CONFIG_CACHE_PATH=/app/data/cache/config_cache.json
    volumes:
      # Data persistence
      - ./data:/app/data

      # Configuration file
      - ./.env:/app/.env:ro
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - btc-bot-network

  # =============================================================================
  # Advanced Setup Service (Advanced Profile)
  # =============================================================================
  # For production deployments with private sheets and external notifications
  # - Supports private Google Sheets authentication
  # - Telegram/Email notifications
  # - Production-ready security
  btc-trading-bot:
    profiles: ["advanced"]
    build: .
    container_name: btc-trading-bot
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Load from .env file (create from .env.example)
      - DEBUG=${DEBUG:-false}
      - HOST=0.0.0.0
      - PORT=8000

      # Google Sheets configuration
      - GOOGLE_SHEET_ID=${GOOGLE_SHEET_ID}
      - GOOGLE_WORKSHEET_NAME=${GOOGLE_WORKSHEET_NAME:-Sheet1}
      # Optional: For private sheets, uncomment and set credentials
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS:-}

      # Telegram configuration (optional)
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID:-}
      - TELEGRAM_CHAT_USERNAME=${TELEGRAM_CHAT_USERNAME:-}

      # Email notification configuration (optional)
      - EMAIL_SMTP_HOST=${EMAIL_SMTP_HOST:-}
      - EMAIL_SMTP_PORT=${EMAIL_SMTP_PORT:-587}
      - EMAIL_FROM=${EMAIL_FROM:-}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD:-}
      - EMAIL_TO=${EMAIL_TO:-}

      # Coinbase configuration (optional)
      - COINBASE_CANDLES_GRANULARITY=${COINBASE_CANDLES_GRANULARITY:-30m}

      # File paths (using container paths)
      - CONFIG_CACHE_PATH=/app/data/cache/config_cache.json
    volumes:
      # Data persistence
      - ./data:/app/data

      # Configuration files (read-only)
      - ./.env:/app/.env:ro

      # Optional: Credential files for private sheets (comment out if not needed)
      # For simple setup with public sheets, comment out the lines below
      # Uncomment only if you're using private sheets with authentication

      # Google Service Account (for private sheets via service account)
      # Create this file first: cp your-credentials.json service_account.json
      # - ./service_account.json:/app/service_account.json:ro

      # OAuth tokens (for private sheets via OAuth)
      # This file is auto-generated during OAuth flow
      # - ./token.json:/app/data/cache/token.json
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - btc-bot-network

  # Optional: Add a database service for production
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: btc-trading-bot-db
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: btc_trading_bot
  #     POSTGRES_USER: ${DB_USER:-btc_user}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD:-change_me}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - btc-bot-network

networks:
  btc-bot-network:
    driver: bridge

volumes:
  # Uncomment if using PostgreSQL
  # postgres_data:
  data:
    driver: local
